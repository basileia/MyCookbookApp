@page "/recipe/add"
@rendermode InteractiveWebAssembly
@using System.ComponentModel.DataAnnotations
@using MyCookbook.Shared.DTOs.RecipeDTOs
@using MyCookbook.Shared.DTOs.RecipeIngredientDTOs
@using MyCookbook.Shared.DTOs.CategoryDTOs
@using MyCookbook.Client.Components

@inject HttpClient Http
@inject NavigationManager Navigation
@inject IJSRuntime JS

<div class="recipe-form-container">
    <h2> Vložení nového receptu</h2>

    @if (isLoading)
    {
        <p>Načítám data...</p>
    }
    else
    {        
        <RecipeForm Recipe="recipe" AvailableCategories="categories" @bind-ErrorMessage="errorMessage" OnValidSubmit="SaveRecipe" />
    }
</div>

@code {
    private CreateRecipeDto recipe = new()
        {
            Ingredients = new List<CreateRecipeIngredientDto>
        {
            new CreateRecipeIngredientDto()
        },
            Steps = new List<RecipeStepDto>
        {
            new RecipeStepDto { StepNumber = 1 }
        },
            CategoryIds = new List<int>()
        };
       
    private List<SelectableCategoryDto>? categories;
    private string errorMessage = "";
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            categories = await Http.GetFromJsonAsync<List<SelectableCategoryDto>>("/api/category/getallcategories");
        }
        catch
        {
            categories = new List<SelectableCategoryDto>();
        }
        isLoading = false;
    }

    private async Task SaveRecipe(CreateRecipeDto recipeToSave)
    {        
        try
        {
            var response = await Http.PostAsJsonAsync("/api/recipes", recipeToSave);
            if (response.IsSuccessStatusCode)
            {
                Navigation.NavigateTo("/");
            }
            else
            {
                var errorContent = await response.Content.ReadFromJsonAsync<Error>();
                errorMessage = errorContent?.Details;
                await JS.InvokeVoidAsync("scrollToTop");
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Chyba při ukládání receptu: {ex.Message}";
            await JS.InvokeVoidAsync("scrollToTop");
        }
    }
}