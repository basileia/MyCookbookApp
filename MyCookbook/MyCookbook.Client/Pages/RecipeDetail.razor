@page "/recipe/{id:int}"
@rendermode InteractiveWebAssembly
@using MyCookbook.Shared.DTOs.RecipeDTOs
@inject HttpClient Http
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims

<PageTitle>@(recipe?.Name ?? "Recept") - My Cookbook</PageTitle>

<div class="recipe-form-container recipe-detail">
    @if (recipe == null)
    {
        <div class="recipe-loading">
            <i class="bi bi-clock"></i>
            Načítám recept...
        </div>
    }
    else
    {
        <h2>@recipe?.Name</h2>
        <div class="recipe-detail-card">

            <div class="recipe-servings">
                <strong>Počet porcí:</strong> @recipe.NumberOfServings
            </div>

            <div class="recipe-ingredients">
                <h3>Suroviny</h3>
                @if (recipe.Ingredients == null || !recipe.Ingredients.Any())
                {
                    <p-grid class="empty-ingredients">Žádné suroviny</p-grid>
                }
                else
                {
                    @foreach (var ingredient in recipe.Ingredients)
                    {
                        <div class="ingredient-row">@ingredient.IngredientName @ingredient.Quantity @ingredient.Unit</div>
                    }
                }
            </div>

            <div class="recipe-preparation">
                <h3>Postup</h3>
                @if (recipe.Steps == null || !recipe.Steps.Any())
                {
                    <p-grid class="empty-preparation">Žádné kroky k přípravě</p-grid>
                }
                else
                {
                    @foreach (var step in recipe.Steps)
                    {
                        <div class="step-row">
                            <div class="step-number">@step.StepNumber</div>
                            <div class="step-content">@step.Description</div>
                        </div>
                    }
                }
            </div>

            @if (isUserAuthenticated && recipe.UserId == currentUserId)
            {
                <div class="recipe-actions">
                    <button @onclick="DeleteRecipe" class="delete-button">Smazat</button>
                    <button @onclick="NavigateToUpdate" class="update-button">Upravit</button>
                </div>
            }
        </div>
    }
</div>


@code {
    [Parameter] public int Id { get; set; }
    private RecipeDetailDto? recipe;
    private bool isUserAuthenticated;
    private string currentUserId = "";

    protected override async Task OnInitializedAsync()
    {
        try {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;

            isUserAuthenticated = user.Identity?.IsAuthenticated ?? false;

            if (isUserAuthenticated)
            {
                currentUserId = user.FindFirst(ClaimTypes.NameIdentifier)?.Value ?? string.Empty;
            }

            recipe = await Http.GetFromJsonAsync<RecipeDetailDto>($"/api/recipes/{Id}");
        }
        catch(Exception ex) {
            Console.WriteLine($"Chyba: {ex.Message}");
        }        
    }

    private async Task DeleteRecipe()
    {
        var response = await Http.DeleteAsync($"/api/recipes/{Id}");        

        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            Console.WriteLine("Došlo k chybě při mazání.");
        }
    }

    private void NavigateToUpdate() 
    {
        NavigationManager.NavigateTo($"/recipe/edit/{Id}");
    }
}